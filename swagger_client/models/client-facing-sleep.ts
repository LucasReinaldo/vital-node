/* tslint:disable */
/* eslint-disable */
/**
 * Vital
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/**
 * 
 * @export
 * @interface ClientFacingSleep
 */
export interface ClientFacingSleep {
    /**
     * 
     * @type {string}
     * @memberof ClientFacingSleep
     */
    id: any;
    /**
     * Date for specified record
     * @type {Date}
     * @memberof ClientFacingSleep
     */
    date: any;
    /**
     * UTC Time when the sleep period started
     * @type {Date}
     * @memberof ClientFacingSleep
     */
    bedtimeStart: any;
    /**
     * UTC Time when the sleep period ended
     * @type {Date}
     * @memberof ClientFacingSleep
     */
    bedtimeStop: any;
    /**
     * Timezone offset from UTC as minutes. For example, EEST (Eastern European Summer Time, +3h) is 180. PST (Pacific Standard Time, -8h) is -480. Note that timezone information is also available in the datetime values themselves, see for example.bedtime_start.::minutes
     * @type {number}
     * @memberof ClientFacingSleep
     */
    timezoneOffset?: any;
    /**
     * Total duration of the sleep period (sleep.duration = sleep.bedtime_end - sleep.bedtime_start).::seconds
     * @type {number}
     * @memberof ClientFacingSleep
     */
    duration: any;
    /**
     * Total amount of sleep registered during the sleep period (sleep.total = sleep.rem + sleep.light + sleep.deep).::seconds
     * @type {number}
     * @memberof ClientFacingSleep
     */
    total: any;
    /**
     * Total amount of awake time registered during the sleep period.::seconds
     * @type {number}
     * @memberof ClientFacingSleep
     */
    awake: any;
    /**
     * Total amount of light sleep registered during the sleep period::seconds
     * @type {number}
     * @memberof ClientFacingSleep
     */
    light: any;
    /**
     * Total amount of REM sleep registered during the sleep period, minutes::seconds
     * @type {number}
     * @memberof ClientFacingSleep
     */
    rem: any;
    /**
     * Total amount of deep (N3) sleep registered during the sleep period::seconds
     * @type {number}
     * @memberof ClientFacingSleep
     */
    deep: any;
    /**
     * The lowest heart rate (5 minutes sliding average) registered during the sleep period.::beats per minute
     * @type {number}
     * @memberof ClientFacingSleep
     */
    hrLowest?: any;
    /**
     * The average heart rate registered during the sleep period.::beats per minute
     * @type {number}
     * @memberof ClientFacingSleep
     */
    hrAverage?: any;
    /**
     * Sleep efficiency is the percentage of the sleep period spent asleep (100% * sleep.total / sleep.duration).::perc
     * @type {number}
     * @memberof ClientFacingSleep
     */
    efficiency?: any;
    /**
     * Detected latency from bedtime_start to the beginning of the first five minutes of persistent sleep.::seconds
     * @type {number}
     * @memberof ClientFacingSleep
     */
    latency?: any;
    /**
     * Skin temperature deviation from the long-term temperature average.::celcius
     * @type {number}
     * @memberof ClientFacingSleep
     */
    temperatureDelta?: any;
    /**
     * The average heart rate registered during the sleep period.::beats per minute
     * @type {number}
     * @memberof ClientFacingSleep
     */
    averageHrv?: any;
    /**
     * Average respiratory rate.::breaths per minute
     * @type {number}
     * @memberof ClientFacingSleep
     */
    respiratoryRate?: any;
    /**
     * Source the data has come from.
     * @type {SourceClientFacing}
     * @memberof ClientFacingSleep
     */
    source: any;
    /**
     * User key returned by vital create user key request. This key should be stored in your database against the user and used for all interactions with the vital api.
     * @type {string}
     * @memberof ClientFacingSleep
     */
    userId: any;
}
